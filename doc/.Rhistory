knitr::opts_chunk$set(echo = TRUE)
# YOUR CODE HERE
SLR_ex3 <- lm(total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
)
# YOUR CODE HERE
SLR_ex3 <- lm(total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(digest)
library(testthat)
facebook_data <- read_csv("data/facebook_data.csv")
facebook_sampling_data <- read_csv("data/facebook_sampling_data.csv")
facebook_sampling_data
answer1_1 <- "true"
# YOUR CODE HERE
. = ottr::check("tests/Q1.1.R")
answer1_2 <- "false"
# YOUR CODE HERE
. = ottr::check("tests/Q1.2.R")
answer1_3 <- "true"
# YOUR CODE HERE
. = ottr::check("tests/Q1.3.R")
answer1_4 <- "true"
# YOUR CODE HERE
. = ottr::check("tests/Q1.4.R")
answer1_5 <- "false"
# YOUR CODE HERE
. = ottr::check("tests/Q1.5.R")
MLR_add_ex2 <-
lm(total_engagement_percentage ~ page_engagement_percentage + post_category,
data = facebook_sampling_data)
MLR_int_ex2 <-
lm(
total_engagement_percentage ~ post_category * page_engagement_percentage *
post_category,
data = facebook_sampling_data
)
# YOUR CODE HERE
tidy(MLR_add_ex2)
tidy(MLR_int_ex2)
. = ottr::check("tests/Q2.1.R")
pred_MLR_add_ex2 = predict(MLR_add_ex2, newdata = facebook_sampling_data)
intermed1 <- facebook_sampling_data
facebook_sampling_data <- cbind(intermed1, pred_MLR_add_ex2)
add_pred_by_category <-
facebook_sampling_data |> ggplot(
aes(
page_engagement_percentage,
total_engagement_percentage,
color = post_category
)
) +
geom_point(alpha = 0.8) + theme_bw() +
geom_smooth(aes(y = pred_MLR_add_ex2), size = 0.3) +
xlab("Observed Facebook page engagement percentage") +
ylab("Observed Facebook total engagement percentage") +
labs(title = "The scatterplot showing Facebook total engagment percentage vs page engagement percentage",
subtitle = "The regression lines indicate in-sample predictions for each category.",
colour = "Post Category Type") + theme(text = element_text(size = 5))
# YOUR CODE HERE
add_pred_by_category
. = ottr::check("tests/Q2.2.R")
pred_MLR_int_ex2 = predict(MLR_int_ex2, newdata = facebook_sampling_data)
intermed2 <- facebook_sampling_data
facebook_sampling_data <- cbind(intermed2, pred_MLR_int_ex2)
int_pred_by_category <- facebook_sampling_data |> ggplot(
aes(
page_engagement_percentage,
total_engagement_percentage,
color = post_category
)
) +
geom_point(alpha = 0.5) + theme_bw() +
geom_smooth(aes(y = pred_MLR_int_ex2), size = 0.3) +
xlab("Observed Facebook page engagement percentage") +
ylab("Observed Facebook total engagement percentage") +
labs(title = "The scatterplot showing Facebook total engagment percentage vs page engagement percentage",
subtitle = "The regression lines indicate in-sample predictions for each category with the interaction effect",
colour = "Post Category Type") + theme(text = element_text(size = 5)) + theme(text =
element_text(size = 5))
# YOUR CODE HERE
int_pred_by_category
. = ottr::check("tests/Q2.3.R")
tidy(MLR_int_ex2) %>% mutate_if(is.numeric, round, 2)
# YOUR CODE HERE
SLR_ex3 <- lm(total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
)
facebook_data <- augment(SLR_ex3, facebook_data)
. = ottr::check("tests/Q3.1.R")
R_squared_SLR_ex3 <-
1 - sum(SLR_ex3$.resid ^ 2) / (sd(SLR_ex3$total_engagement_percentage) ^
2 * (nrow(SLR_ex3) - 1))
# YOUR CODE HERE
R_squared_SLR_ex3
. = ottr::check("tests/Q3.2.R")
key_stats_ex3 <- glance(lm(
total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
))
# YOUR CODE HERE
key_stats_ex3
. = ottr::check("tests/Q3.3.R")
SLR_ex4 <- lm(
total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
)
MLR_ex4 <- lm(
total_engagement_percentage ~ page_engagement_percentage + comment_percentage,
data = facebook_data
)
# YOUR CODE HERE
tidy(SLR_ex4)
tidy(MLR_ex4)
. = ottr::check("tests/Q4.1.R")
key_stats_SLR_ex4 <- glance(SLR_ex4)
key_stats_MLR_ex4 <- glance(MLR_ex4)
# YOUR CODE HERE
key_stats_SLR_ex4
key_stats_MLR_ex4
. = ottr::check("tests/Q4.2.R")
F_test_ex4 <- anova(SLR_ex4, MLR_ex4)
# YOUR CODE HERE
tidy(F_test_ex4)
. = ottr::check("tests/Q4.3.R")
# YOUR CODE HERE
tidy(SLR_ex4)
# YOUR CODE HERE
SLR_ex3 <- lm(total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
)
facebook_data <- augment(SLR_ex3, facebook_data)
facebook_data
R_squared_SLR_ex3 <-
1 - sum(facebook_data$.resid ^ 2) / (sd(facebook_data$total_engagement_percentage) ^
2 * (nrow(facebook_data) - 1))
# YOUR CODE HERE
R_squared_SLR_ex3
. = ottr::check("tests/Q3.2.R")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(digest)
library(testthat)
facebook_data <- read_csv("data/facebook_data.csv")
facebook_sampling_data <- read_csv("data/facebook_sampling_data.csv")
facebook_sampling_data
answer1_1 <- "true"
# YOUR CODE HERE
. = ottr::check("tests/Q1.1.R")
answer1_2 <- "false"
# YOUR CODE HERE
. = ottr::check("tests/Q1.2.R")
answer1_3 <- "true"
# YOUR CODE HERE
. = ottr::check("tests/Q1.3.R")
answer1_4 <- "true"
# YOUR CODE HERE
. = ottr::check("tests/Q1.4.R")
answer1_5 <- "false"
# YOUR CODE HERE
. = ottr::check("tests/Q1.5.R")
MLR_add_ex2 <-
lm(total_engagement_percentage ~ page_engagement_percentage + post_category,
data = facebook_sampling_data)
MLR_int_ex2 <-
lm(
total_engagement_percentage ~ post_category * page_engagement_percentage *
post_category,
data = facebook_sampling_data
)
# YOUR CODE HERE
tidy(MLR_add_ex2)
tidy(MLR_int_ex2)
. = ottr::check("tests/Q2.1.R")
pred_MLR_add_ex2 = predict(MLR_add_ex2, newdata = facebook_sampling_data)
intermed1 <- facebook_sampling_data
facebook_sampling_data <- cbind(intermed1, pred_MLR_add_ex2)
add_pred_by_category <-
facebook_sampling_data |> ggplot(
aes(
page_engagement_percentage,
total_engagement_percentage,
color = post_category
)
) +
geom_point(alpha = 0.8) + theme_bw() +
geom_smooth(aes(y = pred_MLR_add_ex2), size = 0.3) +
xlab("Observed Facebook page engagement percentage") +
ylab("Observed Facebook total engagement percentage") +
labs(title = "The scatterplot showing Facebook total engagment percentage vs page engagement percentage",
subtitle = "The regression lines indicate in-sample predictions for each category.",
colour = "Post Category Type") + theme(text = element_text(size = 5))
# YOUR CODE HERE
add_pred_by_category
. = ottr::check("tests/Q2.2.R")
pred_MLR_int_ex2 = predict(MLR_int_ex2, newdata = facebook_sampling_data)
intermed2 <- facebook_sampling_data
facebook_sampling_data <- cbind(intermed2, pred_MLR_int_ex2)
int_pred_by_category <- facebook_sampling_data |> ggplot(
aes(
page_engagement_percentage,
total_engagement_percentage,
color = post_category
)
) +
geom_point(alpha = 0.5) + theme_bw() +
geom_smooth(aes(y = pred_MLR_int_ex2), size = 0.3) +
xlab("Observed Facebook page engagement percentage") +
ylab("Observed Facebook total engagement percentage") +
labs(title = "The scatterplot showing Facebook total engagment percentage vs page engagement percentage",
subtitle = "The regression lines indicate in-sample predictions for each category with the interaction effect",
colour = "Post Category Type") + theme(text = element_text(size = 5)) + theme(text =
element_text(size = 5))
# YOUR CODE HERE
int_pred_by_category
. = ottr::check("tests/Q2.3.R")
tidy(MLR_int_ex2) %>% mutate_if(is.numeric, round, 2)
# YOUR CODE HERE
SLR_ex3 <- lm(total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
)
facebook_data <- augment(SLR_ex3, facebook_data)
facebook_data
. = ottr::check("tests/Q3.1.R")
R_squared_SLR_ex3 <-
1 - sum(facebook_data$.resid ^ 2) / (sd(facebook_data$total_engagement_percentage) ^
2 * (nrow(facebook_data) - 1))
# YOUR CODE HERE
R_squared_SLR_ex3
. = ottr::check("tests/Q3.2.R")
key_stats_ex3 <- glance(lm(
total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
))
# YOUR CODE HERE
key_stats_ex3
. = ottr::check("tests/Q3.3.R")
SLR_ex4 <- lm(
total_engagement_percentage ~ page_engagement_percentage,
data = facebook_data
)
MLR_ex4 <- lm(
total_engagement_percentage ~ page_engagement_percentage + comment_percentage,
data = facebook_data
)
# YOUR CODE HERE
tidy(SLR_ex4)
tidy(MLR_ex4)
. = ottr::check("tests/Q4.1.R")
key_stats_SLR_ex4 <- glance(SLR_ex4)
key_stats_MLR_ex4 <- glance(MLR_ex4)
# YOUR CODE HERE
key_stats_SLR_ex4
key_stats_MLR_ex4
. = ottr::check("tests/Q4.2.R")
F_test_ex4 <- anova(SLR_ex4, MLR_ex4)
# YOUR CODE HERE
tidy(F_test_ex4)
. = ottr::check("tests/Q4.3.R")
# YOUR CODE HERE
tidy(SLR_ex4)
